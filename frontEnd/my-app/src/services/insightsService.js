/**
 * insightsService.js
 *
 * Provides functions to fetch and cache the latest summary (insights)
 * generated by the backend for a given YouTube URL.
 */
const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api/videos';

/** @type {string|null} Holds the most recently fetched summary text. */
let dataReceived;

/**
 * Fetches an AI-generated summary for the given YouTube URL.
 *
 * Sends a GET request to the backend `/summary` endpoint.
 *
 * @param {string} url                 The YouTube video URL to summarize.
 * @param {AbortSignal} [signal]       Optional AbortSignal to cancel the request.
 * @returns {Promise<string>}          Resolves with the summary text.
 * @throws {Error}                     If the network request fails or returns a non-OK status.
 */
export async function getSummary(url, signal) {
    const response = await fetch(`${API_URL}/summary?url=${encodeURIComponent(url)}`, { signal });
    const data = await response.text(); // get as string
    if (!response.ok) {
        throw new Error('Failed to fetch insights');
    }
    dataReceived = data; // store the received data
    return data;
}

/**
 * Returns the last fetched summary text.
 *
 * Useful for components that need to re‚Äêrender the summary
 * without making a new network request (e.g., when navigating
 * back and forth).
 *
 * @returns {string|null} The last summary, or null if none fetched yet.
 */
export function getLastSummary() {
    return dataReceived;
}